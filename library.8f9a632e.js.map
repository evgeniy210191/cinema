{"mappings":"AAAeA,eAAiB,CAC9BC,IAAK,mCACLC,cAAcC,EAAO,GACnB,MAOMC,EAAM,2DAA2DC,KAAKJ,YAAYE,oCAClFG,QAAiBC,MAAMH,EARd,CACbI,QAAS,CACPC,OAAQ,mBACRC,cACE,gOAMN,aADmBJ,EAASK,M,GCZjBC,WAAa,CAC1BA,WAAY,GACZX,IAAK,mCACLC,cAAcC,EAAO,GACnB,MASMC,EAAM,4FAAkEC,KAAKO,mBAAmBT,2EAChGG,QAAiBC,MAAMH,EATd,CACbI,QAAS,CACPC,OAAQ,mBACRC,cACE,gOAON,aADmBJ,EAASK,M,EAI1BE,YACF,OAAOR,KAAKO,U,EAEVC,UAAMC,GACRT,KAAKO,WAAaE,C,GCvBtB,IAAAC,EAAeC,eAAiB,CAC9Bf,IAAK,mCAELC,cAAce,GACZ,MAQMC,EAAU,sCAAsCD,gBAChDX,QAAiBC,MAAMW,EATd,CACbC,OAAQ,MACRX,QAAS,CACPC,OAAQ,mBACRC,cACE,gOAMN,aADmBJ,EAASK,M,GCbjBS,MAAQ,CACrBC,KAAMC,SAASC,cAAc,QAE7BC,iBACEF,SAASG,iBAAiB,SAASC,IAUjC,GATIA,EAAMC,OAAOC,QAAQ,WACvBR,MAAMS,OAAOH,EAAMC,OAAOG,WAAWC,QAAQC,aAE3CN,EAAMC,OAAOC,QAAQ,WACnBvB,KAAK4B,OAAOC,UAAUC,SAAS,aACjC9B,KAAK4B,OAAOC,UAAUE,OAAO,WAC7B/B,KAAKgB,KAAKa,UAAUE,OAAO,cAGP,YAApBV,EAAMC,OAAOV,GAAkB,CACjC,MAAMoB,EAAUC,aAAaC,QAAQ,kBACrC,GAAIF,EAAS,CACX,MAAMG,EAASC,KAAKC,MAAML,GAG1B,OAFAG,EAAOG,KAAKjB,EAAMC,OAAOI,QAAQd,SACjCqB,aAAaM,QAAQ,iBAAkBH,KAAKI,UAAUL,G,CAGxDF,aAAaM,QACX,iBACAH,KAAKI,UAAU,CAACnB,EAAMC,OAAOI,QAAQd,K,CAIzC,GAAwB,UAApBS,EAAMC,OAAOV,GAAgB,CAC/B,MAAMoB,EAAUC,aAAaC,QAAQ,gBACrC,GAAIF,EAAS,CACX,MAAMG,EAASC,KAAKC,MAAML,GAG1B,OAFAG,EAAOG,KAAKjB,EAAMC,OAAOI,QAAQd,SACjCqB,aAAaM,QAAQ,eAAgBH,KAAKI,UAAUL,G,CAGtDF,aAAaM,QACX,eACAH,KAAKI,UAAU,CAACnB,EAAMC,OAAOI,QAAQd,K,MAK7Cf,gBAAgB4C,GACd,MAAMC,QAAiBhC,EAAeiC,QAAQF,IACxCG,cACJA,EAAaC,WACbA,EAAUC,aACVA,EAAYC,eACZA,EAAcC,WACdA,EAAUC,SACVA,EAAQC,OACRA,EAAMtC,GACNA,GACE8B,EASJ,MAAO,2TAQyDE,WAAuBG,wEAExDA,kKAIED,sCACZD,wHAG4CG,wFACID,+EA3BxD,MACX,IAAII,EAAa,GACjB,IAAK,MAAMC,KAAQF,EACjBC,EAAWb,KAAKc,EAAK3C,MAEvB,OAAO0C,EAAWE,KAAK,KAAK,EAuB8BC,yJAKhDL,wJAI8DrC,uGACJA,sG,EAQxEf,aAAa4C,GACX,MAAMc,QAAiBxC,MAAMyC,UAAUf,GACvCzC,KAAKgB,KAAKyC,mBAAmB,aAAcF,GAC3C,MAAM3B,EAASX,SAASyC,eAAe,mBACvC1D,KAAK4B,OAASA,EACTA,EAAOC,UAAUC,SAAS,aAC7BF,EAAOC,UAAU8B,IAAI,WACrB3D,KAAKgB,KAAKa,UAAU8B,IAAI,a","sources":["src/api-js/defaltData.js","src/api-js/fethcApi.js","src/api-js/aboutFilmFetch.js","src/api-js/modal.js"],"sourcesContent":["export default defaultRequest = {\n  key: 'ef54c316f166b2a5913791e8b3f63a4a',\n  async getData(page = 1) {\n    const option = {\n      headers: {\n        accept: 'application/json',\n        Authorization:\n          'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJlZjU0YzMxNmYxNjZiMmE1OTEzNzkxZThiM2Y2M2E0YSIsInN1YiI6IjY0NzBkZmZhYzVhZGE1MDBjMWEzNzhmMiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.fljmrABHLVGUf2e0aWKvdHeTeR0ruZNkP26DhsQLuYM',\n      },\n    };\n    const URL = `https://api.themoviedb.org/3/trending/movie/day?api_key=${this.key}&page=${page}&include_adult=false&language=uk`;\n    const response = await fetch(URL, option);\n    const data = await response.json();\n    return data;\n  },\n};\n","export default searchData = {\n  searchData: '',\n  key: 'ef54c316f166b2a5913791e8b3f63a4a',\n  async getData(page = 1) {\n    const key = 'ef54c316f166b2a5913791e8b3f63a4a';\n    const option = {\n      headers: {\n        accept: 'application/json',\n        Authorization:\n          'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJlZjU0YzMxNmYxNjZiMmE1OTEzNzkxZThiM2Y2M2E0YSIsInN1YiI6IjY0NzBkZmZhYzVhZGE1MDBjMWEzNzhmMiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.fljmrABHLVGUf2e0aWKvdHeTeR0ruZNkP26DhsQLuYM',\n      },\n    };\n\n    const URL = `https://api.themoviedb.org/3/search/movie?api_key=${key}&query=${this.searchData}&page=${page}&include_adult=false&append_to_response=videos$confirm=true&language=uk`;\n    const response = await fetch(URL, option);\n    const data = await response.json();\n    return data;\n  },\n\n  get query() {\n    return this.searchData;\n  },\n  set query(name) {\n    this.searchData = name;\n  },\n};\n","export default aboutFilmFetch = {\n  key: 'ef54c316f166b2a5913791e8b3f63a4a',\n\n  async getData(id) {\n    const option = {\n      method: 'GET',\n      headers: {\n        accept: 'application/json',\n        Authorization:\n          'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJlZjU0YzMxNmYxNjZiMmE1OTEzNzkxZThiM2Y2M2E0YSIsInN1YiI6IjY0NzBkZmZhYzVhZGE1MDBjMWEzNzhmMiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.fljmrABHLVGUf2e0aWKvdHeTeR0ruZNkP26DhsQLuYM',\n      },\n    };\n    const request = `https://api.themoviedb.org/3/movie/${id}?language=uk`;\n    const response = await fetch(request, option);\n    const film = await response.json();\n    return film;\n  },\n};\n","import aboutFilmFetch from './aboutFilmFetch';\nexport default modal = {\n  body: document.querySelector('body'),\n\n  eventListeners() {\n    document.addEventListener('click', event => {\n      if (event.target.closest('.films')) {\n        modal.render(event.target.parentNode.dataset.atrebutInfo);\n      }\n      if (event.target.closest('.close')) {\n        if (this.isOpen.classList.contains('is-open')) {\n          this.isOpen.classList.remove('is-open');\n          this.body.classList.remove('is-hidden');\n        }\n      }\n      if (event.target.id === 'wotched') {\n        const idFilms = localStorage.getItem('idFilmsWotched');\n        if (idFilms) {\n          const parsId = JSON.parse(idFilms);\n          parsId.push(event.target.dataset.id);\n          localStorage.setItem('idFilmsWotched', JSON.stringify(parsId));\n          return;\n        }\n        localStorage.setItem(\n          'idFilmsWotched',\n          JSON.stringify([event.target.dataset.id])\n        );\n      }\n\n      if (event.target.id === 'queue') {\n        const idFilms = localStorage.getItem('idFilmsQueue');\n        if (idFilms) {\n          const parsId = JSON.parse(idFilms);\n          parsId.push(event.target.dataset.id);\n          localStorage.setItem('idFilmsQueue', JSON.stringify(parsId));\n          return;\n        }\n        localStorage.setItem(\n          'idFilmsQueue',\n          JSON.stringify([event.target.dataset.id])\n        );\n      }\n    });\n  },\n  async aboutFilm(idS) {\n    const filmInfo = await aboutFilmFetch.getData(idS);\n    const {\n      backdrop_path,\n      vote_count,\n      vote_average,\n      original_title,\n      popularity,\n      overview,\n      genres,\n      id,\n    } = filmInfo;\n    const genr = () => {\n      let genresName = [];\n      for (const genr of genres) {\n        genresName.push(genr.name);\n      }\n      return genresName.join(', ');\n    };\n\n    return `\n    <div class=\"backdrop\" id=\"backdrop-modals\">\n    <div class=\"modal\">\n      <button tupe=\"button\" class=\"close\">\n          <span class=\"top\"></span> \n          <span class=\"bottom\"></span>\n      </button>\n      <div class=\"card-film\">\n        <img class=\"card-img\" src=\"https://image.tmdb.org/t/p/w500${backdrop_path}\" alt=\"${original_title}\">\n        <div class=\"fistful\">\n          <h2 class=\"title-film\">${original_title}</h2>\n          <div class=\"rating\">\n            <div class=\"firste-title\">Vote/Votes\n              <p class=\"detail\">\n                <span class=\"vote\">${vote_average}</span> /\n                <span\">${vote_count}</span>\n              </p>\n            </div>\n            <p class=\"firste-title\">Popularity<span class=\"detail\">${popularity}</span></p>\n            <p class=\"firste-title\">Original Title<span class=\"detail\">${original_title}</span></p>\n            <p class=\"firste-title\">Genre<span class=\"detail\">${genr()}</span></p>\n          </div>\n          <div class=\"about-film\">\n            <h3>Про кіно</h3>\n            <p class=\"about-text\">\n              ${overview}\n            </p>\n          </div>\n          <div class=\"add-film\">\n            <button type=\"button\" class=\"add-wotched\" id=\"wotched\" data-id=\"${id}\">add to Watched</button>\n            <button type=\"button\" class=\"add-queue\" id=\"queue\" data-id=\"${id}\">add to queue</button>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n    `;\n  },\n  async render(idS) {\n    const myRender = await modal.aboutFilm(idS);\n    this.body.insertAdjacentHTML('afterbegin', myRender);\n    const isOpen = document.getElementById('backdrop-modals');\n    this.isOpen = isOpen;\n    if (!isOpen.classList.contains('is-open')) {\n      isOpen.classList.add('is-open');\n      this.body.classList.add('is-hidden');\n    }\n  },\n};\n"],"names":["defaultRequest","key","async","page","URL","this","response","fetch","headers","accept","Authorization","json","searchData","query","name","$8b471e0bfbdfbb16$export$2e2bcd8739ae039","aboutFilmFetch","id","request","method","modal","body","document","querySelector","eventListeners","addEventListener","event","target","closest","render","parentNode","dataset","atrebutInfo","isOpen","classList","contains","remove","idFilms","localStorage","getItem","parsId","JSON","parse","push","setItem","stringify","idS","filmInfo","getData","backdrop_path","vote_count","vote_average","original_title","popularity","overview","genres","genresName","genr","join","genr1","myRender","aboutFilm","insertAdjacentHTML","getElementById","add"],"version":3,"file":"library.8f9a632e.js.map"}